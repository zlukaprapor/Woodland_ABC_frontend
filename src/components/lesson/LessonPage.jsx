import React, { useState, useEffect } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { getLessonById } from "../../api/lessons.jsx";
import Button from "../ui/Button.jsx";
import OwlModalButton from "../ui/OwlModalButton";
import { lessonPageStyles, modalStyles } from "../../styles/lessonStyles.js";

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç `LessonPage` ‚Äî —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –æ–∫—Ä–µ–º–æ–≥–æ —É—Ä–æ–∫—É –∑ –ª—ñ—Ç–µ—Ä–æ—é.
 * –í—ñ–¥–æ–±—Ä–∞–∂–∞—î –º–µ–¥—ñ–∞-–∫–æ–Ω—Ç–µ–Ω—Ç (–∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, –∞—É–¥—ñ–æ), –æ–ø–∏—Å, –ø—Ä–∞–≤–∏–ª–∞ —Ç–∞ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏.
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –≤ –æ—Å–≤—ñ—Ç–Ω—å–æ–º—É –¥–æ–¥–∞—Ç–∫—É –¥–ª—è –¥—ñ—Ç–µ–π.
 */
export default function LessonPage() {
    const { lessonId } = useParams(); // –û—Ç—Ä–∏–º–∞–Ω–Ω—è ID —É—Ä–æ–∫—É –∑ URL
    const [lesson, setLesson] = useState(null); // –°—Ç–∞–Ω —É—Ä–æ–∫—É
    const [loading, setLoading] = useState(true); // –°—Ç–∞–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    const [error, setError] = useState(null); // –°—Ç–∞–Ω –ø–æ–º–∏–ª–∫–∏
    const navigate = useNavigate(); // –ù–∞–≤—ñ–≥–∞—Ü—ñ—è –º—ñ–∂ —Å—Ç–æ—Ä—ñ–Ω–∫–∞–º–∏
    const [showModal, setShowModal] = useState(true); // –°—Ç–∞–Ω –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑ –ø—Ä–∞–≤–∏–ª–∞–º–∏

    const API_BASE_URL = "http://127.0.0.1:8000/uploads"; // –ë–∞–∑–æ–≤–∏–π —à–ª—è—Ö –¥–æ –º–µ–¥—ñ–∞-—Ñ–∞–π–ª—ñ–≤

    /**
     * –§–æ—Ä–º–∞—Ç—É—î —à–ª—è—Ö –¥–æ –º–µ–¥—ñ–∞-—Ñ–∞–π–ª—ñ–≤ –¥–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤ –±—Ä–∞—É–∑–µ—Ä—ñ.
     * @param {string} path - –í—ñ–¥–Ω–æ—Å–Ω–∏–π —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É.
     * @returns {string|null} –ü–æ–≤–Ω–∏–π —à–ª—è—Ö –∞–±–æ null.
     */
    const normalizePath = (path) =>
        path ? `${API_BASE_URL}/${path.replace(/\\/g, "/")}` : null;

    /**
     * –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –¥–∞–Ω—ñ —É—Ä–æ–∫—É –∑–∞ –π–æ–≥–æ ID.
     */
    useEffect(() => {
        const fetchLesson = async () => {
            try {
                console.log("–û—Ç—Ä–∏–º—É—é —É—Ä–æ–∫ –∑ ID:", lessonId);
                const data = await getLessonById(lessonId);
                console.log("–û—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ —É—Ä–æ–∫—É:", data);
                setLesson(data);
                setLoading(false);
            } catch (err) {
                console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —É—Ä–æ–∫—É:", err);
                setError("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —É—Ä–æ–∫. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.");
                setLoading(false);
            }
        };

        fetchLesson();
    }, [lessonId]);

    /**
     * –í—ñ–¥—Ç–≤–æ—Ä—é—î –∞—É–¥—ñ–æ—Ñ–∞–π–ª —É—Ä–æ–∫—É (–≤–∏–º–æ–≤–∞ –ª—ñ—Ç–µ—Ä–∏).
     */
    const playAudio = () => {
        if (lesson && lesson.audio_file) {
            const audioUrl = normalizePath(lesson.audio_file);
            console.log("–ì—Ä–∞—é –∞—É–¥—ñ–æ:", audioUrl);
            const audio = new Audio(audioUrl);
            audio.play().catch((e) => console.error("–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—É–¥—ñ–æ:", e));
        }
    };

    return (
        <div style={lessonPageStyles.mainContainer}>
            {/* ü¶â –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ –ø—Ä–∞–≤–∏–ª–∞–º–∏ */}
            {showModal && lesson?.regulations && (
                <div style={modalStyles.overlay}>
                    <div style={modalStyles.content}>
                        <img
                            src="/owl/OwlModal.png"
                            alt="–°–æ–≤–∞"
                            style={modalStyles.owlImage}
                        />
                        <h2>–ü—Ä–∏–≤—ñ—Ç! –Ø –°–æ–≤–µ–Ω—è</h2>
                        <div style={{ maxHeight: "60vh", overflowY: "auto", whiteSpace: "pre-wrap" }}>
                            {lesson.regulations
                                .split(/üîπ|üìå/)
                                .map((item, index) =>
                                    item.trim() ? (
                                        <p key={index} style={{ marginBottom: "5px" }}>
                                            {lesson.regulations.includes("üìå" + item) ? "üìå" : "üîπ"} {item.trim()}
                                        </p>
                                    ) : null
                                )}
                        </div>
                        <button style={modalStyles.button} onClick={() => setShowModal(false)}>
                            –ó—Ä–æ–∑—É–º—ñ–ª–æ!
                        </button>
                    </div>
                </div>
            )}

            {/* –ö–Ω–æ–ø–∫–∞-—Å–æ–≤–∞, —â–æ–± –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤—ñ–¥–∫—Ä–∏—Ç–∏ –ø—Ä–∞–≤–∏–ª–∞ */}
            <OwlModalButton showModal={showModal} setShowModal={setShowModal} />

            <div style={lessonPageStyles.contentWrapper}>
                {/* –ë–ª–æ–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è / –ø–æ–º–∏–ª–∫–∏ */}
                {loading ? (
                    <div style={lessonPageStyles.loadingContainer}>
                        <div style={lessonPageStyles.loadingContent}>
                            <p style={lessonPageStyles.loadingText}>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —É—Ä–æ–∫—É...</p>
                            <div style={lessonPageStyles.loadingIndicator}></div>
                        </div>
                    </div>
                ) : error ? (
                    <div style={lessonPageStyles.errorContainer}>
                        <div style={lessonPageStyles.errorContent}>
                            <p style={lessonPageStyles.errorMessage}>{error}</p>
                            <div style={lessonPageStyles.errorActions}>
                                <Button
                                    onClick={() => navigate("/dashboard")}
                                    text="‚¨ÖÔ∏è –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –∞–±–µ—Ç–∫–∏"
                                    color="#66BB6A"
                                />
                            </div>
                        </div>
                    </div>
                ) : lesson ? (
                    <>
                        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ */}
                        <div style={lessonPageStyles.header}>
                            <h1 style={lessonPageStyles.headerTitle}>
                                –í–∏–≤—á–∞—î–º–æ –ª—ñ—Ç–µ—Ä—É {lesson?.letter_upper || "..."}
                            </h1>
                            <div style={lessonPageStyles.headerButtons}>
                                <Button
                                    onClick={() => navigate("/dashboard")}
                                    text="‚¨ÖÔ∏è –î–æ –∞–±–µ—Ç–∫–∏"
                                    color="#66BB6A"
                                    style={lessonPageStyles.headerButtonStyle}
                                />
                                <Button
                                    onClick={() => navigate(`/quiz/${lessonId}`)}
                                    text="–î–æ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è ‚û°Ô∏è"
                                    color="#FFA726"
                                    style={lessonPageStyles.headerButtonStyle}
                                />
                            </div>
                        </div>

                        {/* –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç —É—Ä–æ–∫—É */}
                        <div style={lessonPageStyles.mainContent}>
                            {/* –õ—ñ–≤–∞ –∫–æ–ª–æ–Ω–∫–∞: –ª—ñ—Ç–µ—Ä–∞, –∞—É–¥—ñ–æ, —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è, –≤—ñ—Ä—à—ñ */}
                            <div style={lessonPageStyles.leftColumn}>
                                {/* –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ª—ñ—Ç–µ—Ä–∏ */}
                                <div style={lessonPageStyles.letterBlock}>
                                    <h3 style={lessonPageStyles.blockTitle}>–õ—ñ—Ç–µ—Ä–∞ —Ç–∞ —ó—ó –Ω–∞–ø–∏—Å–∞–Ω–Ω—è</h3>
                                    {lesson.letter_image && (
                                        <img
                                            src={normalizePath(lesson.letter_image)}
                                            alt={`–õ—ñ—Ç–µ—Ä–∞ ${lesson.letter_upper}`}
                                            style={lessonPageStyles.letterImage}
                                        />
                                    )}
                                </div>

                                {/* –ê—É–¥—ñ–æ –¥–ª—è –ø—Ä–æ—Å–ª—É—Ö–æ–≤—É–≤–∞–Ω–Ω—è –∑–≤—É–∫—É –ª—ñ—Ç–µ—Ä–∏ */}
                                {lesson.audio_file && (
                                    <div style={lessonPageStyles.audioBlock}>
                                        <h3 style={lessonPageStyles.audioBlockTitle}>–Ø–∫ –∑–≤—É—á–∏—Ç—å —Ü—è –ª—ñ—Ç–µ—Ä–∞:</h3>
                                        <div style={lessonPageStyles.audioButtonWrapper}>
                                            <Button
                                                onClick={playAudio}
                                                text="‚ñ∂Ô∏è –ü–æ—Å–ª—É—Ö–∞—Ç–∏"
                                                color="#9C27B0"
                                            />
                                        </div>
                                    </div>
                                )}

                                {/* –ë–ª–æ–∫ –∑ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è–º (–≤–∏–º–æ–≤–∞, –≤–ø—Ä–∞–≤–∏) */}
                                {lesson.training && (
                                    <div style={lessonPageStyles.infoBlock}>
                                        <h3 style={lessonPageStyles.infoBlockTitle}>–í—á–∏–º–æ –∑–≤—É–∫–∏:</h3>
                                        {lesson.training.split("\\n").map((line, index) => (
                                            <p key={index} style={lessonPageStyles.infoBlockText}>
                                                {line.trim()}
                                            </p>
                                        ))}
                                    </div>
                                )}

                                {/* –ë–ª–æ–∫ –∑ –≤—ñ—Ä—à–∞–º–∏ / –æ–ø–∏—Å–æ–º */}
                                {lesson.description && (
                                    <div style={lessonPageStyles.infoBlock}>
                                        <h3 style={lessonPageStyles.infoBlockTitle}>–í—ñ—Ä—à–∏–∫–∏:</h3>
                                        {lesson.description.split("\\n").map((line, index) => (
                                            <p key={index} style={lessonPageStyles.infoBlockText}>
                                                {line.trim()}
                                            </p>
                                        ))}
                                    </div>
                                )}
                            </div>

                            {/* –ü—Ä–∞–≤–∞ –∫–æ–ª–æ–Ω–∫–∞: –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ */}
                            <div style={lessonPageStyles.rightColumn}>
                                <h3 style={lessonPageStyles.objectsTitle}>
                                    –ü—Ä–µ–¥–º–µ—Ç–∏ –Ω–∞ –ª—ñ—Ç–µ—Ä—É {lesson.letter_upper}:
                                </h3>

                                {[lesson.object_image_first, lesson.object_image_second, lesson.object_image_third]
                                    .filter(Boolean)
                                    .map((img, index) => (
                                        <div key={index} style={lessonPageStyles.objectImageContainer}>
                                            <div style={lessonPageStyles.objectImageWrapper}>
                                                <img
                                                    src={normalizePath(img)}
                                                    alt={`–ü—Ä–µ–¥–º–µ—Ç –Ω–∞ –ª—ñ—Ç–µ—Ä—É ${lesson.letter_upper}`}
                                                    style={lessonPageStyles.objectImage}
                                                />
                                            </div>
                                        </div>
                                    ))}
                            </div>
                        </div>
                    </>
                ) : (
                    // –Ø–∫—â–æ —É—Ä–æ–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
                    <div style={lessonPageStyles.errorContainer}>
                        <div style={lessonPageStyles.errorContent}>
                            <p style={lessonPageStyles.loadingText}>–£—Ä–æ–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</p>
                            <div style={lessonPageStyles.errorActions}>
                                <Button
                                    onClick={() => navigate("/dashboard")}
                                    text="‚¨ÖÔ∏è –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –∞–±–µ—Ç–∫–∏"
                                    color="#66BB6A"
                                />
                            </div>
                        </div>
                    </div>
                )}
            </div>
        </div>
    );
}
