import React, {useState, useEffect} from "react";
import {useNavigate} from "react-router-dom";
import {getLessons} from "../api/lessons";
import {getAuthUser} from "../services/authService";
import {userDashboardStyles} from "../styles/pagesStyles.js";

export default function UserDashboard() {
    const [letters, setLetters] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);
    const [user, setUser] = useState(null);
    const navigate = useNavigate();

    useEffect(() => {
        // –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        const currentUser = getAuthUser();
        setUser(currentUser);

        const fetchLetters = async () => {
            try {
                // –ó–∞–ø–∏—Ç –Ω–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É —É—Ä–æ–∫—ñ–≤
                const response = await getLessons();
                console.log("API –≤—ñ–¥–ø–æ–≤—ñ–¥—å:", response); // –î–ª—è –¥–µ–±–∞–≥—É

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ —ñ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –ø—Ä–∞–≤–∏–ª—å–Ω–æ
                if (response && Array.isArray(response)) {
                    setLetters(response);
                } else if (response && Array.isArray(response.lessons)) {
                    setLetters(response.lessons);
                } else if (response && Array.isArray(response.items)) {
                    setLetters(response.items);
                } else {
                    console.error("–ù–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ API:", response);
                    setLetters([]);
                }
                setLoading(false);
            } catch (err) {
                console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –ª—ñ—Ç–µ—Ä:", err);
                setError("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –ª—ñ—Ç–µ—Ä–∏. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.");
                setLoading(false);
            }
        };

        fetchLetters();
    }, []);

    const handleLetterClick = (letter) => {
        navigate(`/lesson/${letter.id}`);
    };

    const getRandomColor = () => {
        const colors = [
            "#FFD54F", // –∂–æ–≤—Ç–∏–π
            "#AED581", // –∑–µ–ª–µ–Ω–∏–π
            "#81C784", // —Ç–µ–º–Ω–æ-–∑–µ–ª–µ–Ω–∏–π
            "#4FC3F7", // –≥–æ–ª—É–±–∏–π
            "#7986CB", // —Ñ—ñ–æ–ª–µ—Ç–æ–≤–∏–π
            "#FF8A65", // –æ—Ä–∞–Ω–∂–µ–≤–∏–π
            "#BA68C8", // —Ä–æ–∂–µ–≤–∏–π
            "#4DD0E1", // –±—ñ—Ä—é–∑–æ–≤–∏–π
        ];
        return colors[Math.floor(Math.random() * colors.length)];
    };

    // –î–ª—è –≤—ñ–¥–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É
    console.log("–ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω letters:", letters);
    console.log("–ö—ñ–ª—å–∫—ñ—Å—Ç—å —É—Ä–æ–∫—ñ–≤:", letters?.length);

    return (
        <div style={userDashboardStyles.pageContainer}>
            <div style={userDashboardStyles.contentCard}>
                <h1 style={userDashboardStyles.pageTitle}>
                    üå≥ –õ—ñ—Å–æ–≤–∞ –∞–±–µ—Ç–∫–∞ ü¶ä
                </h1>

                {user && (
                    <p style={userDashboardStyles.userGreeting}>
                        –ü—Ä–∏–≤—ñ—Ç, {user.username || "—é–Ω–∏–π –¥—Ä—É–∂–µ"}! üëã
                    </p>
                )}

                {loading ? (
                    <div style={{textAlign: "center", padding: "20px"}}>
                        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ª—ñ—Ç–µ—Ä...</p>
                        <div style={userDashboardStyles.loadingIndicator}></div>
                    </div>
                ) : error ? (
                    <p style={{color: "red", textAlign: "center"}}>{error}</p>
                ) : (
                    <>
                        <p style={userDashboardStyles.selectionPrompt}>
                            –û–±–µ—Ä–∏ –ª—ñ—Ç–µ—Ä—É –¥–ª—è –≤–∏–≤—á–µ–Ω–Ω—è:
                        </p>

                        <div style={userDashboardStyles.lettersGrid}>
                            {letters && letters.length > 0 ? (
                                letters.map((letter) => {
                                    const bgColor = getRandomColor();

                                    return (
                                        <div
                                            key={letter.id}
                                            style={{
                                                ...userDashboardStyles.letterCard,
                                                backgroundColor: bgColor,
                                            }}
                                            onClick={() => handleLetterClick(letter)}
                                            onMouseEnter={(e) => {
                                                e.currentTarget.style.transform = "translateY(-5px) scale(1.05)";
                                                e.currentTarget.style.boxShadow = "0 8px 16px rgba(0,0,0,0.3)";
                                            }}
                                            onMouseLeave={(e) => {
                                                e.currentTarget.style.transform = "translateY(0) scale(1)";
                                                e.currentTarget.style.boxShadow = "0 4px 8px rgba(0,0,0,0.2)";
                                            }}
                                        >
                                            {letter.letter_upper}
                                            <div style={userDashboardStyles.letterLowercase}>
                                                {letter.letter_lower}
                                            </div>
                                        </div>
                                    );
                                })
                            ) : (
                                <div style={userDashboardStyles.emptyStateContainer}>
                                    <p style={userDashboardStyles.emptyStateMessage}>
                                        –õ—ñ—Ç–µ—Ä–∏ —â–µ –Ω–µ –¥–æ–¥–∞–Ω—ñ. –ü–æ–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—è –ø—ñ–∑–Ω—ñ—à–µ!
                                    </p>
                                    <p style={userDashboardStyles.emptyStateHint}>
                                        –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ –¥–æ–¥–∞—Ç–∏ —É—Ä–æ–∫–∏ –≤ –ø–∞–Ω–µ–ª—ñ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
                                    </p>
                                </div>
                            )}
                        </div>
                    </>
                )}

                <div style={userDashboardStyles.footerSection}>
                    <p style={userDashboardStyles.footerText}>
                        –í–∏–≤—á–∞–π—Ç–µ —ñ –≥—Ä–∞–π—Ç–µ—Å—è —Ä–∞–∑–æ–º –∑ –Ω–∞–º–∏! üå≤ü¶äüåû
                    </p>
                </div>
            </div>
        </div>
    );
}